<style>
  #shopify-section-{{ section.id }} {
    --section-padding-top: {{ section.settings.padding_top }}px;
    --section-padding-bottom: {{ section.settings.padding_bottom }}px;
    {%- render 'section-variables', section: section -%}
  }
</style>

<div class="section section--padding{% if section.settings.divider %} section--divider{% endif %}{% if section.settings.rounded %} section--rounded relative{% endif %}{% if section.settings.style == 'with-background' %} section--plain{% endif %}">
  <div class="page-width{% if section.settings.narrow %} page-width--narrow{% endif %} relative">
    {%- if section.settings.style == 'with-border' -%}
      {%- render 'section-heading', section: section -%}
    {%- endif -%}

    {%- if section.blocks.size > 0 -%}
      {%- liquid
        assign with_gradient = false
        if section.settings.gradient_highlight != blank and section.settings.gradient_highlight != 'rgba(0,0,0,0)'
          assign with_gradient = true
        endif

        assign contact = section.blocks | where: "type", "contact" | first
      -%}
      <div class="faqs {{ section.settings.style }} flex flex-col lg:flex-row relative z-1">
        <div class="grow grid gap-8 md:gap-12">
          {%- if section.settings.style == 'with-background' -%}
            {%- if section.settings.heading != blank or section.settings.description != blank or section.settings.button_label != blank -%}
              <div class="grid gap-4 {{ section.settings.heading_alignment }}">
                {%- if section.settings.heading != blank or section.settings.description != blank -%}
                  <div class="title-wrapper leading-none grid gap-4 {{ section.settings.heading_alignment }}">
                    {%- if section.settings.heading != blank -%}
                      <{{ section.settings.heading_tag }} class="heading {{ section.settings.heading_size }}">
                        {%- if section.settings.highlighted_text == 'none' -%}
                          <split-words class="split-words block" data-animate="fade-up-large">{{ section.settings.heading }}</split-words>
                        {%- else -%}
                          {%- render 'highlighted-text', content: section.settings.heading, style: section.settings.highlighted_text, scribble: section.settings.highlighted_scribble, gradient: with_gradient -%}
                        {%- endif -%}
                      </{{ section.settings.heading_tag }}>
                    {%- endif -%}
                    
                    {%- if section.settings.description != blank -%}
                      <div class="page-width--narrow rte leading-normal text-sm xl:text-base">
                        {{- section.settings.description -}}
                      </div>
                    {%- endif -%}
                  </div>
                {%- endif -%}

                {%- if section.settings.button_label != blank -%}
                  <p>
                    {%- render 'button',
                      style: 'secondary',
                      label: section.settings.button_label,
                      link: section.settings.button_link,
                      external: section.settings.button_external,
                      show_icon: section.settings.button_icon
                    -%}
                  </p>
                {%- endif -%}
              </div>
            {%- endif -%}
          {%- endif -%}
          <div class="faq">
            {%- for block in section.blocks -%}
              {%- case block.type -%}
                {%- when 'rich-text' -%}
                  {%- if forloop.index0 > 0 -%}
                    {% # theme-check-disable UnclosedHTMLElement %}
                    </div>
                    <div class="faq">
                    {% # theme-check-enable UnclosedHTMLElement %}
                  {%- endif -%}
                  <div class="accordion accordion--text" {{ block.shopify_attributes }}>
                    <div class="grid gap-2d5">
                      <p class="heading lg:text-3xl text-2xl leading-none tracking-tight">
                        {%- render 'highlighted-text', content: block.settings.heading, style: block.settings.highlighted_text, scribble: block.settings.highlighted_scribble, gradient: with_gradient -%}
                      </p>
                      <div class="text-opacity text-base rte">
                        {{- block.settings.text -}}
                      </div>
                    </div>
                  </div>
    
                {%- when 'question' -%}
                  <div class="accordion">
                    <details class="details" is="accordion-details" {{ block.shopify_attributes }}>
                      <summary class="details__summary flex items-center justify-between gap-2 cursor-pointer">
                        <span class="text-base lg:text-lg xl:text-xl font-medium leading-tight">
                          {%- render 'highlighted-text', content: block.settings.title, style: block.settings.highlighted_text, scribble: block.settings.highlighted_scribble, gradient: with_gradient -%}
                        </span>
                        {%- render 'icon', icon: 'plus-2', size: 'xs', class: 'flex-auto' -%}
                      </summary>
                      <div class="details__content text-base rte">
                        {{- block.settings.text -}}
                      </div>
                    </details>
                  </div>
              {%- endcase -%}
            {%- endfor -%}
          </div>
        </div>

        {%- if contact != blank -%}
          {%- assign form_id = 'ContactForm-' | append: section.id -%}
          {%- form 'contact', id: form_id, class: 'grow-0' -%}
            <sticky-element class="contact__sidebar grid gap-7d5 md:gap-10 sticky top-0">
              <div class="flex justify-between gap-6">
                <div class="grid gap-2d5">
                  <p class="heading lg:text-3xl text-2xl leading-none tracking-tight">
                    {%- render 'highlighted-text', content: contact.settings.heading, style: contact.settings.highlighted_text, scribble: contact.settings.highlighted_scribble, gradient: with_gradient -%}
                  </p>
                  <div class="text-opacity text-base rte">
                    {{- contact.settings.text -}}
                  </div>
                </div>

                {%- if contact.settings.avatar != blank -%}
                  {%- capture sizes -%}{{ contact.settings.avatar_height | times: contact.settings.avatar.aspect_ratio }}px{%- endcapture -%}
                  {%- capture widths -%}{{ contact.settings.avatar_height | times: contact.settings.avatar.aspect_ratio }}, {{ contact.settings.avatar_height | times: contact.settings.avatar.aspect_ratio | times: 2 | at_most: contact.settings.avatar.width }}{%- endcapture -%}
                  {%- capture style -%}--image-width: {{ contact.settings.avatar_height | times: contact.settings.avatar.aspect_ratio }}px; --image-height: {{ contact.settings.avatar_height }}px;{%- endcapture -%}

                  <div class="media media--transparent relative">
                    {{- contact.settings.avatar | image_url: width: contact.settings.avatar.width | image_tag: loading: 'lazy', sizes: sizes, widths: widths, style: style, is: 'lazy-image' -}}
                  </div>
                {%- endif -%}
              </div>
              <div class="grid gap-4d5 md:gap-6">
                {%- if form.errors -%}
                  <div class="field">
                    {%- liquid
                      assign form_errors = form.errors | default_errors
                      render 'alert', status: 'error', content: form_errors
                    -%}
                  </div>
                {%- endif -%}
      
                {%- if form.posted_successfully? -%}
                  <div class="field">
                    {%- liquid
                      assign success_message = 'contact.form.post_success' | t
                      render 'alert', status: 'success', content: success_message
                    -%}
                  </div>
                {%- endif -%}

                <div class="field">
                  <input
                    class="input is-floating"
                    autocomplete="name"
                    type="text"
                    id="ContactFormName-{{ section.id }}"
                    name="contact[{{ 'contact.form.name' | t }}]"
                    value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.name }}{% endif %}"
                    placeholder="{{ 'contact.form.name' | t | escape }}"
                  />
                  <label class="label is-floating" for="ContactFormName-{{ section.id }}">{{ 'contact.form.name' | t }}</label>
                </div>
                <div class="field">
                  <input
                    class="input is-floating{% if form.errors contains 'email' %} invalid{% endif %}"
                    autocomplete="email"
                    type="email"
                    id="ContactFormEmail-{{ section.id }}"
                    name="contact[email]"
                    spellcheck="false"
                    autocapitalize="off"
                    value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
                    placeholder="{{ 'contact.form.email' | t | escape }}"
                    required
                  >
                  <label class="label is-floating" for="ContactFormEmail-{{ section.id }}">{{ 'contact.form.email' | t }}</label>
                </div>

                {%- if contact.settings.show_phone -%}
                  <div class="field">
                    <input
                      class="input is-floating"
                      autocomplete="phone"
                      type="tel"
                      id="ContactFormPhone-{{ section.id }}"
                      name="contact[{{ 'contact.form.phone' | t }}]"
                      value="{% if form.phone %}{{ form.phone }}{% elsif customer %}{{ customer.phone }}{% endif %}"
                      placeholder="{{ 'contact.form.phone' | t | escape }}"
                      pattern="[0-9\-]*"
                    />
                    <label class="label is-floating" for="ContactFormPhone-{{ section.id }}">{{ 'contact.form.phone' | t }}</label>
                  </div>
                {%- endif -%}

                <div class="field">
                  <textarea
                    class="textarea is-floating"
                    rows="4"
                    id="ContactFormMessage-{{ section.id }}"
                    name="contact[{{ 'contact.form.message' | t }}]"
                    placeholder=" "
                  >
                    {{- form.body -}}
                  </textarea>
                  <label class="label is-floating" for="ContactFormMessage-{{ section.id }}">{{ 'contact.form.message' | t }}</label>
                </div>
                <div class="field">
                  <label for="ContactSubmit-{{ section.id }}" class="sr-only">{{ 'contact.form.send' | t }}</label>
                  <button type="submit" id="ContactSubmit-{{ section.id }}" class="button button--primary button--fixed" is="hover-button">
                    <span class="btn-fill" data-fill></span>
                    <span class="btn-text">{{ 'contact.form.send' | t }}</span>
                  </button>
                </div>
              </div>
            </sticky-element>
          {%- endform -%}
        {%- endif -%}
      </div>
    {%- endif -%}
  </div>
</div>

{%- assign question_blocks = section.blocks | where: 'type', 'question' -%}
{%- if question_blocks.size > 0 -%}
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "FAQPage",
      "mainEntity": [
        {%- for block in question_blocks -%}
          {
            "@type": "Question",
            "name": {{ block.settings.title | json }},
            "acceptedAnswer": {
              "@type": "Answer",
              "text": {{ block.settings.text | json }}
            }
          }{% unless forloop.last %},{% endunless %}
        {% endfor -%}
      ]
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.faq.name",
  "settings": [
    {
      "type": "select",
      "id": "style",
      "label": "t:sections.faq.settings.style.label",
      "options": [
        {
          "value": "with-border",
          "label": "t:sections.faq.settings.style.options__1.label"
        },
        {
          "value": "with-background",
          "label": "t:sections.faq.settings.style.options__2.label"
        }
      ],
      "default": "with-border"
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__heading.content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "t:sections.global.settings.heading.label",
      "default": "FAQs"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "title-sm",
          "label": "t:sections.global.settings.heading_size.options__1.label"
        },
        {
          "value": "title-md",
          "label": "t:sections.global.settings.heading_size.options__2.label"
        },
        {
          "value": "title-lg tracking-heading",
          "label": "t:sections.global.settings.heading_size.options__3.label"
        },
        {
          "value": "title-xl tracking-heading",
          "label": "t:sections.global.settings.heading_size.options__4.label"
        }
      ],
      "default": "title-md",
      "label": "t:sections.global.settings.heading_size.label"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "t:sections.global.settings.heading_alignment.label",
      "options": [
        {
          "value": "text-left md:items-end md:flex-row",
          "label": "t:sections.global.settings.heading_alignment.options__1.label"
        },
        {
          "value": "text-center md:items-center",
          "label": "t:sections.global.settings.heading_alignment.options__2.label"
        },
        {
          "value": "text-right md:items-end md:flex-row-reverse",
          "label": "t:sections.global.settings.heading_alignment.options__3.label"
        }
      ],
      "default": "text-left md:items-end md:flex-row"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "options": [
        {
          "value": "h1",
          "label": "t:sections.global.settings.heading_tag.options__1.label"
        },
        {
          "value": "h2",
          "label": "t:sections.global.settings.heading_tag.options__2.label"
        },
        {
          "value": "h3",
          "label": "t:sections.global.settings.heading_tag.options__3.label"
        },
        {
          "value": "h4",
          "label": "t:sections.global.settings.heading_tag.options__4.label"
        },
        {
          "value": "h5",
          "label": "t:sections.global.settings.heading_tag.options__5.label"
        },
        {
          "value": "h6",
          "label": "t:sections.global.settings.heading_tag.options__6.label"
        },
        {
          "value": "div",
          "label": "t:sections.global.settings.heading_tag.options__7.label"
        },
        {
          "value": "span",
          "label": "t:sections.global.settings.heading_tag.options__8.label"
        },
        {
          "value": "p",
          "label": "t:sections.global.settings.heading_tag.options__9.label"
        }
      ],
      "default": "h2",
      "label": "t:sections.global.settings.heading_tag.label",
      "info": "t:sections.global.settings.heading_tag.info"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "t:sections.global.settings.subheading.label"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "t:sections.global.settings.description.label"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "t:sections.global.settings.button_label.label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.global.settings.button_link.label"
    },
    {
      "type": "checkbox",
      "id": "button_external",
      "label": "t:sections.global.settings.button_external.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "button_icon",
      "label": "t:sections.global.settings.button_icon.label",
      "default": true
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__highlight.content",
      "info": "t:sections.global.settings.header__highlight.info"
    },
    {
      "type": "select",
      "id": "highlighted_text",
      "options": [
        {
          "value": "none",
          "label": "t:sections.global.settings.highlighted_text.options__1.label"
        },
        {
          "value": "text",
          "label": "t:sections.global.settings.highlighted_text.options__2.label"
        },
        {
          "value": "full_text",
          "label": "t:sections.global.settings.highlighted_text.options__3.label"
        },
        {
          "value": "half_text",
          "label": "t:sections.global.settings.highlighted_text.options__4.label"
        },
        {
          "value": "underline",
          "label": "t:sections.global.settings.highlighted_text.options__5.label"
        },
        {
          "value": "stencil",
          "label": "t:sections.global.settings.highlighted_text.options__6.label"
        },
        {
          "value": "scribble",
          "label": "t:sections.global.settings.highlighted_text.options__7.label"
        }
      ],
      "default": "none",
      "label": "t:sections.global.settings.highlighted_text.label"
    },
    {
      "type": "select",
      "id": "highlighted_scribble",
      "options": [
        {
          "value": "circle",
          "label": "t:sections.global.settings.highlighted_scribble.options__1.label"
        },
        {
          "value": "basic-underline",
          "label": "t:sections.global.settings.highlighted_scribble.options__2.label"
        },
        {
          "value": "sketch-underline",
          "label": "t:sections.global.settings.highlighted_scribble.options__3.label"
        },
        {
          "value": "squiggle-underline",
          "label": "t:sections.global.settings.highlighted_scribble.options__4.label"
        },
        {
          "value": "squiggle-underline-2",
          "label": "t:sections.global.settings.highlighted_scribble.options__5.label"
        }
      ],
      "default": "circle",
      "label": "t:sections.global.settings.highlighted_scribble.label",
      "info": "t:sections.global.settings.highlighted_scribble.info"
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__colors.content",
      "info": "t:sections.global.settings.header__colors.info"
    },
    {
      "type": "color",
      "id": "color_text",
      "label": "t:sections.global.settings.color_text.label"
    },
    {
      "type": "color",
      "id": "color_background",
      "label": "t:sections.global.settings.color_background.label"
    },
    {
      "type": "color_background",
      "id": "gradient_background",
      "label": "t:sections.global.settings.gradient_background.label"
    },
    {
      "type": "color",
      "id": "color_highlight",
      "label": "t:sections.global.settings.color_highlight.label"
    },
    {
      "type": "color_background",
      "id": "gradient_highlight",
      "label": "t:sections.global.settings.gradient_highlight.label"
    },
    {
      "type": "color",
      "id": "color_button_text",
      "label": "t:sections.global.settings.color_button_text.label"
    },
    {
      "type": "color",
      "id": "color_button_background",
      "label": "t:sections.global.settings.color_button_background.label"
    },
    {
      "type": "color_background",
      "id": "color_button_gradient",
      "label": "t:sections.global.settings.color_button_gradient.label"
    },
    {
      "type": "color",
      "id": "color_overlay",
      "label": "t:sections.global.settings.color_overlay.label",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "t:sections.global.settings.overlay_opacity.label",
      "default": 4
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__section.content"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.global.settings.padding_top.label",
      "default": 72
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.global.settings.padding_bottom.label",
      "default": 72
    },
    {
      "type": "checkbox",
      "id": "divider",
      "label": "t:sections.global.settings.divider.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "narrow",
      "label": "t:sections.global.settings.narrow.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "rounded",
      "default": false,
      "label": "t:sections.global.settings.rounded.label"
    }
  ],
  "blocks": [
    {
      "type": "rich-text",
      "name": "t:sections.faq.blocks.rich_text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "label": "t:sections.global.settings.heading.label",
          "default": "Rich text"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.global.settings.text.label",
          "default": "<p>Use this section for any descriptive text you need to fill out your pages or to add introductory headings between other blocks.</p>"
        },
        {
          "type": "header",
          "content": "t:sections.global.settings.header__highlight.content",
          "info": "t:sections.global.settings.header__highlight.info"
        },
        {
          "type": "select",
          "id": "highlighted_text",
          "options": [
            {
              "value": "none",
              "label": "t:sections.global.settings.highlighted_text.options__1.label"
            },
            {
              "value": "text",
              "label": "t:sections.global.settings.highlighted_text.options__2.label"
            },
            {
              "value": "full_text",
              "label": "t:sections.global.settings.highlighted_text.options__3.label"
            },
            {
              "value": "half_text",
              "label": "t:sections.global.settings.highlighted_text.options__4.label"
            },
            {
              "value": "underline",
              "label": "t:sections.global.settings.highlighted_text.options__5.label"
            },
            {
              "value": "stencil",
              "label": "t:sections.global.settings.highlighted_text.options__6.label"
            },
            {
              "value": "scribble",
              "label": "t:sections.global.settings.highlighted_text.options__7.label"
            }
          ],
          "default": "none",
          "label": "t:sections.global.settings.highlighted_text.label"
        },
        {
          "type": "select",
          "id": "highlighted_scribble",
          "options": [
            {
              "value": "circle",
              "label": "t:sections.global.settings.highlighted_scribble.options__1.label"
            },
            {
              "value": "basic-underline",
              "label": "t:sections.global.settings.highlighted_scribble.options__2.label"
            },
            {
              "value": "sketch-underline",
              "label": "t:sections.global.settings.highlighted_scribble.options__3.label"
            },
            {
              "value": "squiggle-underline",
              "label": "t:sections.global.settings.highlighted_scribble.options__4.label"
            },
            {
              "value": "squiggle-underline-2",
              "label": "t:sections.global.settings.highlighted_scribble.options__5.label"
            }
          ],
          "default": "circle",
          "label": "t:sections.global.settings.highlighted_scribble.label",
          "info": "t:sections.global.settings.highlighted_scribble.info"
        }
      ]
    },
    {
      "type": "question",
      "name": "t:sections.faq.blocks.question.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "title",
          "label": "t:sections.faq.blocks.question.settings.title.label",
          "default": "Frequently asked question"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.faq.blocks.question.settings.text.label",
          "default": "<p>Use this text to answer questions in as much detail as possible for your customers.</p>"
        },
        {
          "type": "header",
          "content": "t:sections.global.settings.header__highlight.content",
          "info": "t:sections.global.settings.header__highlight.info"
        },
        {
          "type": "select",
          "id": "highlighted_text",
          "options": [
            {
              "value": "none",
              "label": "t:sections.global.settings.highlighted_text.options__1.label"
            },
            {
              "value": "text",
              "label": "t:sections.global.settings.highlighted_text.options__2.label"
            },
            {
              "value": "full_text",
              "label": "t:sections.global.settings.highlighted_text.options__3.label"
            },
            {
              "value": "half_text",
              "label": "t:sections.global.settings.highlighted_text.options__4.label"
            },
            {
              "value": "underline",
              "label": "t:sections.global.settings.highlighted_text.options__5.label"
            },
            {
              "value": "stencil",
              "label": "t:sections.global.settings.highlighted_text.options__6.label"
            },
            {
              "value": "scribble",
              "label": "t:sections.global.settings.highlighted_text.options__7.label"
            }
          ],
          "default": "none",
          "label": "t:sections.global.settings.highlighted_text.label"
        },
        {
          "type": "select",
          "id": "highlighted_scribble",
          "options": [
            {
              "value": "circle",
              "label": "t:sections.global.settings.highlighted_scribble.options__1.label"
            },
            {
              "value": "basic-underline",
              "label": "t:sections.global.settings.highlighted_scribble.options__2.label"
            },
            {
              "value": "sketch-underline",
              "label": "t:sections.global.settings.highlighted_scribble.options__3.label"
            },
            {
              "value": "squiggle-underline",
              "label": "t:sections.global.settings.highlighted_scribble.options__4.label"
            },
            {
              "value": "squiggle-underline-2",
              "label": "t:sections.global.settings.highlighted_scribble.options__5.label"
            }
          ],
          "default": "circle",
          "label": "t:sections.global.settings.highlighted_scribble.label",
          "info": "t:sections.global.settings.highlighted_scribble.info"
        }
      ]
    },
    {
      "type": "contact",
      "name": "t:sections.faq.blocks.contact.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "label": "t:sections.global.settings.heading.label",
          "default": "Didn’t find your answer?"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.global.settings.text.label",
          "default": "<p>Don't hestitate to contact us</p>"
        },
        {
          "type": "checkbox",
          "id": "show_phone",
          "label": "t:sections.faq.blocks.contact.settings.show_phone.label"
        },
        {
          "type": "image_picker",
          "id": "avatar",
          "label": "t:sections.faq.blocks.contact.settings.avatar.label"
        },
        {
          "type": "range",
          "id": "avatar_height",
          "min": 20,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "t:sections.faq.blocks.contact.settings.avatar_height.label",
          "default": 60
        },
        {
          "type": "header",
          "content": "t:sections.global.settings.header__highlight.content",
          "info": "t:sections.global.settings.header__highlight.info"
        },
        {
          "type": "select",
          "id": "highlighted_text",
          "options": [
            {
              "value": "none",
              "label": "t:sections.global.settings.highlighted_text.options__1.label"
            },
            {
              "value": "text",
              "label": "t:sections.global.settings.highlighted_text.options__2.label"
            },
            {
              "value": "full_text",
              "label": "t:sections.global.settings.highlighted_text.options__3.label"
            },
            {
              "value": "half_text",
              "label": "t:sections.global.settings.highlighted_text.options__4.label"
            },
            {
              "value": "underline",
              "label": "t:sections.global.settings.highlighted_text.options__5.label"
            },
            {
              "value": "stencil",
              "label": "t:sections.global.settings.highlighted_text.options__6.label"
            },
            {
              "value": "scribble",
              "label": "t:sections.global.settings.highlighted_text.options__7.label"
            }
          ],
          "default": "none",
          "label": "t:sections.global.settings.highlighted_text.label"
        },
        {
          "type": "select",
          "id": "highlighted_scribble",
          "options": [
            {
              "value": "circle",
              "label": "t:sections.global.settings.highlighted_scribble.options__1.label"
            },
            {
              "value": "basic-underline",
              "label": "t:sections.global.settings.highlighted_scribble.options__2.label"
            },
            {
              "value": "sketch-underline",
              "label": "t:sections.global.settings.highlighted_scribble.options__3.label"
            },
            {
              "value": "squiggle-underline",
              "label": "t:sections.global.settings.highlighted_scribble.options__4.label"
            },
            {
              "value": "squiggle-underline-2",
              "label": "t:sections.global.settings.highlighted_scribble.options__5.label"
            }
          ],
          "default": "circle",
          "label": "t:sections.global.settings.highlighted_scribble.label",
          "info": "t:sections.global.settings.highlighted_scribble.info"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.faq.presets.name",
      "blocks": [
        {
          "type": "question"
        },
        {
          "type": "question"
        },
        {
          "type": "question"
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": [
      "footer",
      "header",
      "custom.overlay"
    ]
  }
}
{% endschema %}
